:root {
    --lightestGreen: hsl(71, 85%, 40%);
    --lightGreen: hsl(73, 84%, 37%);
    --darkGreen: hsl(120, 34%, 29%);
    --darkestGreen: hsl(120, 58%, 14%);
}

*, *::after, *::before{
    box-sizing: border-box;
    font-family: Helvetica;
}

body {
    background-color: var(--lightGreen);

    display: flex;
    flex-direction: column;

    font-size: clamp(.5rem, 2.5vmin, 1.5rem);

    margin: 0;
    min-height: 100vh;
    padding: 1em;
}

/*Grid*/

.guess-grid {
    display: grid;

    align-content: center;
    justify-content: center;

    flex-grow: 1;
    gap: 0.25em;
    grid-template-columns: repeat(5, 4em);
    grid-template-rows: repeat(6, 4em);
    margin-bottom: 1em;
}

/*Tile*/

.tile {
    border: 0.07em solid var(--darkGreen);
    color: var(--darkestGreen);

    font-size: 2em;
    font-weight: bold;
    text-transform: uppercase;

    display: flex;

    justify-content: center;
    align-items: center;
    user-select: none;

    transition: transform 250ms;
}

.tile[data-state="active"] {
    /*border-color: hsl(200, 1%, 34%);*/

    border-color: var(--darkestGreen);
}

.tile[data-state="wrong"] {
    border: none;

    background-color: var(--darkestGreen);
    color: var(--darkGreen);
}

.tile[data-state="wrong-location"] {
    border: none;

    background-color: var(--darkGreen);
    color:var(--lightestGreen);
}

.tile[data-state="correct"] {
    background-color: var(--lightestGreen);
    border: 0.1em solid var(--darkestGreen);
    color: var(--darkestGreen);
}

/*Tile Shake Animation*/

.tile.shake {
    animation: shake 250ms ease-in-out;
}

@keyframes shake {
    10% {
        transform: translateX(-5%);
    }

    30% {
        transform: translateX(5%);
    }

    50% {
        transform: translateX(-7.5%);
    }

    70% {
        transform: translateX(7.5%);
    }

    90% {
        transform: translateX(5%);
    }

    100% {
        transform: translateX(0);
    }
}

/*Tile Flip Animation*/

.tile.flip {
    transform: rotateX(90deg);
}

/*Keyboard*/

.keyboard {
    display: grid;
    gap: 0.25em;
    grid-template-columns: repeat(20, minmax(auto, 1.25em));
    grid-auto-rows: 3em;
    justify-content: center;
}

/*Key*/

.key {
    font-size: inherit;
    font-weight: bold;

    background-color: var(--lightGreen);

    color: var(--darkGreen);
    fill: var(--darkGreen);

    text-transform: uppercase;

    border: 0.1em solid var(--darkGreen);

    border-radius: 0.5em;

    grid-column: span 2;
    padding: 0;

    display: flex;

    align-items: center;
    justify-content: center;

    cursor: pointer;
    user-select: none;
}

.key.large {
    grid-column: span 3;   
}

.key > svg {
    width: 1.75em;
    height: 1.75em;

    pointer-events: none;
}

.key.wrong {
    border: none;
    background-color: var(--darkestGreen);
    color: var(--darkGreen);
}

.key.wrong-location {
    background-color: var(--darkGreen);
    color: var(--lightestGreen);
}

.key.correct {
    border: 0.15em solid var(--darkestGreen);
    background-color: var(--lightestGreen);
    color: var(--darkestGreen);
}

.key:hover, .key:focus {
    filter: brightness(120%);

    border-color: var(--darkestGreen);
    color: var(--darkestGreen);
    fill: var(--darkestGreen);
}

.key.wrong:hover, .key.wrong:focus {
    color: var(--lightGreen);
}